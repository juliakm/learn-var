trigger:
  - '*'
jobs:
  - job: A
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - powershell: echo "##vso[task.setvariable variable=myOutputVar;isOutput=true]this is the value"
      name: setvarStep
    - script: echo $(setvarStep.myOutputVar)
      name: echovar
  - job: B
    dependsOn: A
    pool:
        vmImage: 'ubuntu-latest'
    variables:
        myVarFromJobA: $[dependencies.A.outputs['setvarStep.myOutputVar'] ]  # map in the variable
    steps:
    - script: echo $(myVarFromJobA)
      name: echovar
    - script: echo $(dependencies.A.outputs['setvarStep.myOutputVar'])
      name: echo_no_name
#since not every field evaluates runtime expressions, safest to assign to a var
# variables:
#   b: "Hello" 

# pool:
#   vmImage: 'ubuntu-latest'

# jobs:
# - job:
#   variables:
#     a: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 100)]
#     b: $[format('Hello {0} {1}', 'John', 'Doe')]
#     c: $[format('{0:yyyyMMdd}', pipeline.startTime)]
#     d: $[format('{0:zzz}', pipeline.startTime)]
#     e: $[format('{0:MdH}', pipeline.startTime)]
#     f: $[format('{0:msf}', pipeline.startTime)]
#     g: $[format('{0:K}', pipeline.startTime)]
#     # d: $[format("12", "X4")]
#     # e: $[format('.2468013', "P")]
    

#   steps:
#     - bash: echo $(a)
#     - bash: echo $(b)
#     - bash: echo $(c)
#     - bash: echo $(d)
#     - bash: echo $(e)
#     - bash: echo $(f)
#     - bash: echo $(g)
#   # - bash: echo $(format('{0:zzz}', pipeline.startTime))
#   #  - bash: echo $(d)
#   # - bash: echo $(date)
    